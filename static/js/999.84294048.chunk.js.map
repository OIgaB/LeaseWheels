{"version":3,"file":"static/js/999.84294048.chunk.js","mappings":"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","sources":["components/Modal/Modal.jsx","components/DetailedCard/DetailedCard.jsx","components/Card/Card.jsx","components/Dashboard/Dashboard.jsx","pages/CatalogPage.jsx"],"sourcesContent":["import  { useEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport scss from '../../styles/index.module.scss';\nimport SvgSprite from '../../images/sprite.svg';\n\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal = ({ onClose, children }) => {\n\n   useEffect(() => {\n\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n         onClose();\n         document.body.style.overflow = 'visible'; \n      };\n      };\n      \n      window.addEventListener('keydown', handleKeyDown);\n      \n      return () => window.removeEventListener('keydown', handleKeyDown);\n\n   }, [onClose]);\n \n   const handleBackdropClick = e => {\n      if (e.currentTarget === e.target) {\n         onClose();\n         document.body.style.overflow = 'visible'; \n      };\n   };\n\n   document.body.style.overflow = 'hidden';  \n\n   return (\n      createPortal(<div className={scss.overlay} onClick={handleBackdropClick}>\n            <div className={scss.modal}>\n               <div className={scss.closebtn} onClick={onClose}>\n                  <svg className={scss.icon} width=\"18\" height=\"18\">\n                     <use className='icon' href={SvgSprite + '#icon-close'}></use>\n                  </svg>\n               </div>\n                  {children}\n            </div>\n      </div>, modalRoot)  \n   )\n};\n\nexport default Modal;","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectCarById } from \"../../redux/selectors\";\nimport { getCarByID } from \"../../redux/carsOperations\";\nimport scss from '../../styles/index.module.scss';\n\n\nconst DetailedCard = ({ id }) => {\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(getCarByID(id)); \n    }, [id, dispatch]);\n\n    const {id: carId, img, make, model, year, rentalPrice, address, type, accessories, functionalities, fuelConsumption, engineSize, description, rentalConditions, mileage } = useSelector(selectCarById);\n    \n\n    const addressArray = address ? address.split(',') : [];\n    addressArray.shift();        \n    \n    const rentalConditionsArray = rentalConditions ? rentalConditions.split('\\n') : [];\n    \n    const formateedMileage = mileage ? Number(mileage).toLocaleString('en-US') : '';\n\n    return ( \n        <div className={scss.cardDetailsContainer}>\n            <div className={scss.cardPictureContainer}>\n                <img \n                    className={scss.cardPicture} \n                    src={img}\n                    alt={make}\n                />                                 \n            </div>\n            <div className={scss.cardMetaWrapper}>\n                <p className={scss.cardName}>{make} <span style={{color: '#3470FF'}}>{model}</span>, {year}</p>                              \n                {address && carId && year && type &&\n                    <ul>\n                        {addressArray.map((part, index) => (\n                            <li key={index} className={scss.cardDescr}>{part}</li>\n                        ))}\n                        <li className={scss.cardDescr}>{`Id: ${carId}`}</li>\n                        <li className={scss.cardDescr}>{`Year: ${year}`}</li>\n                        <li className={`${scss.cardDescr} ${scss.cardCarType}`}>{`Type: ${type.toLowerCase()}`}</li>\n                    </ul>\n                }\n                {fuelConsumption && engineSize &&\n                    <div>\n                        <span className={scss.cardDescr}>{`Fuel Consumption: ${fuelConsumption}`}</span>\n                        <span className={scss.cardDescr}>{`Engine Size: ${engineSize}`}</span>\n                    </div>\n                }\n                <p className={scss.cardPromo}>{description}</p>\n                <p className={scss.cardAccesFunc}>Accessories and functionalities:</p>\n                {accessories && functionalities && \n                    <div style={{ marginBottom: '24px' }}> \n                        <ul>\n                            {accessories.map(item => (\n                                <li key={item} className={scss.cardDescr}>{item}</li>\n                            ))}\n                        </ul> \n                        <ul>\n                            {functionalities.map(item => (\n                                <li key={item} className={scss.cardDescr}>{item}</li>\n                            ))}\n                        </ul>             \n                    </div>\n                }\n                <p className={scss.cardAccesFunc}>Rental Conditions:</p>\n                {formateedMileage && rentalPrice &&\n                <ul className={scss.cardConditionsContainer}>\n                    {rentalConditionsArray.map((part, index) => (\n                        <li key={index} className={scss.cardConditions}>\n                            {part.startsWith(\"Minimum age\") ? (\n                                <>\n                                    {\"Minimum age: \"}\n                                    <span className={scss.cardConditionsAccent}>{part.split(\":\")[1]}</span>\n                                </>\n                            ) : (\n                                part\n                            )}\n                        </li>\n                    ))}\n                    <li className={scss.cardConditions}>Mileage: <span className={scss.cardConditionsAccent}>{formateedMileage}</span></li>\n                    <li className={scss.cardConditions}>Price: <span className={scss.cardConditionsAccent}>{rentalPrice}</span></li>\n                </ul>\n                }\n            </div>\n            <button \n                type=\"button\" \n                className={scss.rentalCarBtn}\n            >\n                <a href=\"tel:+380730000000\">Rental car</a>\n            </button>\n        </div> \n    );\n}\n\nexport default DetailedCard;","import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Modal } from \"../Modal\";\nimport { DetailedCard } from \"../DetailedCard\";\nimport { addToFavorite, removeFromFavorite } from '../../redux/favoriteSlice';\nimport { selectFavoriteCars } from '../../redux/selectors';\nimport SvgSprite from '../../images/sprite.svg';\nimport scss from '../../styles/index.module.scss';\n\nconst Card = ({ car }) => {\n    const { id, img, make, model, year, rentalPrice, address, rentalCompany, type, functionalities } = car;\n\n    const dispatch = useDispatch();\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const favoriteCars = useSelector(selectFavoriteCars);\n\n    const handleAddress = (address) => {\n        const parts = address.split(',').map(part => part.trim());\n        const [city, country] = parts.slice(-2);\n        return `${city} | ${country} |`;\n    };\n\n    const handleModel = (make, model) => {\n        return (make.length + model.length > 17) ? `${model.slice(0, 5)}...` : `${model}`; \n    };\n\n    const handleOpenModal = () => {\n        setIsModalOpen(true);\n    };\n    \n    const handleCloseModal = () => {\n        setIsModalOpen(false);\n    };\n\n    const handleButtonClick = (car) => {\n        if (!favoriteCars.some(favorcar => favorcar.id === car.id)) {\n            dispatch(addToFavorite(car)); \n        } else {\n            dispatch(removeFromFavorite(car.id));\n        }   \n      };\n\n    return ( \n        <li className={scss.listCard}> \n            <div className={scss.pictureContainer}>\n                <img className={scss.picture} src={img} alt={make} />    \n                <button\n                    type=\"button\"\n                    className={scss.iconHeartBtn}\n                    aria-label=\"heart\"\n                    onClick={() => handleButtonClick(car)}    \n                >\n                {favoriteCars.some(favorcar => favorcar.id === car.id) ? (\n                    <svg width=\"18\" height=\"18\" fill=\"#3470FF\" stroke='#3470FF'>\n                        <use href={SvgSprite + '#icon-heart'} />\n                    </svg>\n                ) : (\n                    <svg width=\"18\" height=\"18\" fill=\"transparent\" stroke='#fff'>\n                        <use href={SvgSprite + '#icon-heart'} />\n                    </svg>\n                )}\n\n                </button>                              \n            </div>\n                <div className={scss.cardHeaderPrice}>\n                    <p>{make} <span style={{color: '#3470FF'}}>{handleModel(make, model)}</span>, {year}</p>\n                    <p>{rentalPrice}</p>                                \n                </div>\n                <div className={scss.cardDesc}>\n                    <p>{`${handleAddress(address)} ${rentalCompany} | ${rentalPrice.slice(1) > 50 ? 'Premium |' : 'Economy |'}`}<span style={{ textTransform: 'capitalize' }}>{` ${type.toLowerCase()} |`}</span>{` ${model} | ${id} | ${functionalities[0]}`}</p>\n                </div>\n                <button \n                    type=\"button\" \n                    onClick={handleOpenModal}\n                    className={scss.learnMoreBtn}\n                >\n                    Learn more\n                </button>\n                {isModalOpen && (\n                    <Modal onClose={handleCloseModal}>\n                        <DetailedCard id={id} />\n                    </Modal>\n                )}                              \n        </li>          \n    );\n}\n\nexport default Card;","import { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectCars } from \"../../redux/selectors\";\nimport { getCarsPerPage } from \"redux/carsOperations\";\nimport { Card } from '../Card';\nimport { Loader } from \"../Loader\";\nimport scss from '../../styles/index.module.scss';\n\n\n\nconst Dashboard = () => {\n    const [allCars, setAllCars] = useState([]);\n    const [currentPage, setCurrentPage] = useState(1);\n\n    const { items: cars, isLoading, error } = useSelector(selectCars);\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(getCarsPerPage(currentPage)); // fetch for the next 8 cars\n\n    }, [currentPage, dispatch]);\n\n    useEffect(() => {\n        if (cars.length > 0) {\n            setAllCars((prevCars) => {\n                const uniqueNewCars = cars.filter((car) => {\n                    return !prevCars.some((prevCar) => prevCar.id === car.id);\n                });\n                return [...prevCars, ...uniqueNewCars];\n            });\n        }\n    }, [cars]);\n\n    if(currentPage !== 1) {\n        setTimeout(() => {\n          window.scrollBy({\n            top: 510,\n            behavior: 'smooth',\n        });\n        }, 150);\n    }\n\n    return (          \n        <> \n        {isLoading && <Loader />}\n        {error && <p>Sorry, data has not loaded.</p>}\n        <div className={scss.dashbordContainer}>\n            <ul className={scss.dashbordList}>\n                {allCars.length > 0 && (\n                    allCars.map((car) => (\n                        <Card key={car.id} car={car} />                           \n                    ))\n                )}\n            </ul>\n\n            {(allCars.length !== 0 && currentPage !== 4) && \n                <button \n                    type=\"button\" \n                    onClick={() => setCurrentPage((prevPage) => prevPage + 1)} \n                    className={scss.loadMoreBtn}\n                >\n                    Load more\n                </button>\n            }\n            {currentPage === 4 && <p className={scss.collectionEnd}>You've reached the end of search results.</p>} \n        </div>\n        </>   \n    );\n}\n\nexport default Dashboard;","import { Dashboard } from 'components/Dashboard';\n\nconst CatalogPage = () => {\n    return (\n      <Dashboard />\n    );\n  };\n  export default CatalogPage;"],"names":["modalRoot","document","querySelector","onClose","children","useEffect","handleKeyDown","e","code","body","style","overflow","window","addEventListener","removeEventListener","createPortal","className","scss","onClick","currentTarget","target","width","height","href","SvgSprite","id","dispatch","useDispatch","getCarByID","useSelector","selectCarById","carId","img","make","model","year","rentalPrice","address","type","accessories","functionalities","fuelConsumption","engineSize","description","rentalConditions","mileage","addressArray","split","shift","rentalConditionsArray","formateedMileage","Number","toLocaleString","src","alt","color","map","part","index","toLowerCase","marginBottom","item","startsWith","car","rentalCompany","useState","isModalOpen","setIsModalOpen","favoriteCars","selectFavoriteCars","some","favorcar","removeFromFavorite","addToFavorite","handleButtonClick","fill","stroke","length","slice","handleModel","trim","city","country","handleAddress","textTransform","allCars","setAllCars","currentPage","setCurrentPage","selectCars","cars","items","isLoading","error","getCarsPerPage","prevCars","uniqueNewCars","filter","prevCar","setTimeout","scrollBy","top","behavior","Loader","Card","prevPage"],"sourceRoot":""}