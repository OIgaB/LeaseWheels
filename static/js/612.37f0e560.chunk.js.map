{"version":3,"file":"static/js/612.37f0e560.chunk.js","mappings":"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","sources":["components/Modal/Modal.jsx","components/DetailedCard/DetailedCard.jsx","components/Dashboard/Dashboard.jsx","pages/CatalogPage.jsx"],"sourcesContent":["import  { useEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport scss from '../../styles/index.module.scss';\nimport SvgSprite from '../../images/sprite.svg';\n\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal = ({ onClose, children }) => {\n\n   useEffect(() => {\n\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n         onClose();\n         document.body.style.overflow = 'visible'; \n      };\n      };\n      \n      window.addEventListener('keydown', handleKeyDown);\n      \n      return () => window.removeEventListener('keydown', handleKeyDown);\n\n   }, [onClose]);\n \n   const handleBackdropClick = e => {\n      if (e.currentTarget === e.target) {\n         onClose();\n         document.body.style.overflow = 'visible'; \n      };\n   };\n\n   document.body.style.overflow = 'hidden';  \n\n   return (\n      createPortal(<div className={scss.overlay} onClick={handleBackdropClick}>\n            <div className={scss.modal}>\n               <div className={scss.closebtn} onClick={onClose}>\n                  <svg className={scss.icon} width=\"18\" height=\"18\">\n                     <use className='icon' href={SvgSprite + '#icon-close'}></use>\n                  </svg>\n               </div>\n                  {children}\n            </div>\n      </div>, modalRoot)  \n   )\n};\n\nexport default Modal;","import scss from '../../styles/index.module.scss';\n\n\nconst DetailedCard = () => {\n    return ( \n        <div className={scss.detailedCardContainer}>Hello from DetailedCard</div>\n    );\n}\n\nexport default DetailedCard;","import { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCars } from \"../../redux/selectors\";\nimport { getAllCars } from \"redux/carsOperations\";\nimport { Loader } from \"../Loader\";\nimport { Modal } from \"../Modal\";\nimport { DetailedCard } from \"../DetailedCard\";\nimport scss from '../../styles/index.module.scss';\nimport SvgSprite from '../../images/sprite.svg';\n\n\nconst Dashboard = () => {\n    const [allCars, setAllCars] = useState([]);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [isModalOpen, setIsModalOpen] = useState(false);\n\n    const { items: cars, isLoading, error } = useSelector(getCars);\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(getAllCars(currentPage)); // fetch for the next 8 cars\n\n    }, [currentPage, dispatch]);\n\n    useEffect(() => {\n        if (cars.length > 0) {\n            setAllCars((prevCars) => {\n                const uniqueNewCars = cars.filter((car) => {\n                    return !prevCars.some((prevCar) => prevCar.id === car.id);\n                });\n                return [...prevCars, ...uniqueNewCars];\n            });\n        }\n    }, [cars]);\n\n\n    const handleAddress = (address) => {\n        const parts = address.split(',').map(part => part.trim());\n        const [city, country] = parts.slice(-2);\n        return `${city} | ${country} |`;\n    };\n\n    const handleModel = (make, model) => {\n        return (make.length + model.length > 17) ? `${model.slice(0, 5)}...` : `${model}`; \n    };\n\n    const handleOpenModal = () => {\n        setIsModalOpen(true);\n    };\n    \n    const handleCloseModal = () => {\n        setIsModalOpen(false);\n    };\n\n    if(currentPage !== 1) {\n        setTimeout(() => {\n          window.scrollBy({\n            top: 510,\n            behavior: 'smooth',\n        });\n        }, 150);\n    }\n\n    return (          \n        <>   \n        {isLoading && <Loader />}\n        {error && <p>Sorry, data has not loaded.</p>}\n        <div className={scss.dashbordContainer}>\n            <ul className={scss.dashbordList}>\n                {allCars.length > 0 && (\n                    allCars.map(({ id, img, make, model, year, rentalPrice, address, rentalCompany, type,  functionalities}) => (\n                        <li key={id} className={scss.listCard}>\n                            <div className={scss.pictureContainer}>\n                                <img \n                                    className={scss.picture} \n                                    src={img}\n                                    alt={make}\n                                />    \n                                <button\n                                    type=\"button\"\n                                    className={scss.iconHeartBtn}\n                                    aria-label=\"heart\"\n                                    // onClick={dispatch( (id))}\n                                    >\n                                    <svg width=\"18\" height=\"18\">\n                                        <use href={SvgSprite + '#icon-heart'} />\n                                    </svg>\n                                </button>                              \n                            </div>\n                            <div className={scss.cardHeaderPrice}>\n                                <p>{make} <span style={{color: '#3470FF'}}>{handleModel(make, model)}</span>, {year}</p>\n                                <p>{rentalPrice}</p>                                \n                            </div>\n                            <div className={scss.cardDesc}>\n                                <p>{`${handleAddress(address)} ${rentalCompany} | ${rentalPrice.slice(1) > 50 ? 'Premium |' : 'Economy |'}`}<span style={{ textTransform: 'capitalize' }}>{` ${type.toLowerCase()} |`}</span>{` ${model} | ${id} | ${functionalities[0]}`}</p>\n                            </div>\n                            <button \n                                type=\"button\" \n                                onClick={handleOpenModal}\n                                className={scss.learnMoreBtn}\n                            >\n                                Learn more\n                            </button>\n                        </li>\n                    ))\n                )}\n            </ul>\n            {isModalOpen && (\n                <Modal isOpen={isModalOpen} onClose={handleCloseModal}>\n                    <DetailedCard />\n                        {/* // onClose={handleCloseAddCardModal}\n                        // idColumn={activeColumnId}\n                        // operation={addTasks} */}\n                </Modal>\n            )}\n            {(allCars.length !== 0 && currentPage !== 4) && \n                <button \n                    type=\"button\" \n                    onClick={() => setCurrentPage((prevPage) => prevPage + 1)} \n                    className={scss.loadMoreBtn}\n                >\n                    Load more\n                </button>\n            }\n            {currentPage === 4 && <p className={scss.collectionEnd}>You've reached the end of search results.</p>} \n        </div>\n        </>   \n    );\n}\n\nexport default Dashboard;","import { NavLink } from 'react-router-dom';\nimport { Dashboard } from 'components/Dashboard';\n\nconst CatalogPage = () => {\n    return (\n      <>\n        <Dashboard />\n        <h3>Hi there! I am a CataloguePage! сторінка, що містить каталог автівок різної комплектації, які користувач може фільтрувати за маркою, ціною за годину оренди авто та кількістю кілометрів, яку подолав автомобіль під час його експлуатації (пробіг).</h3>\n        <p>\n          <NavLink to=\"/favorites\">Link to FavoritesPage (click me)</NavLink>\n        </p>\n        <p>\n          <NavLink to=\"/\">Link to HomePage (click me)</NavLink>\n        </p>\n      </>\n    );\n  };\n  export default CatalogPage;"],"names":["modalRoot","document","querySelector","onClose","children","useEffect","handleKeyDown","e","code","body","style","overflow","window","addEventListener","removeEventListener","createPortal","className","scss","onClick","currentTarget","target","width","height","href","SvgSprite","useState","allCars","setAllCars","currentPage","setCurrentPage","isModalOpen","setIsModalOpen","useSelector","getCars","cars","items","isLoading","error","dispatch","useDispatch","getAllCars","length","prevCars","uniqueNewCars","filter","car","some","prevCar","id","handleAddress","address","split","map","part","trim","slice","city","country","handleModel","make","model","handleOpenModal","setTimeout","scrollBy","top","behavior","Loader","img","year","rentalPrice","rentalCompany","type","functionalities","src","alt","color","textTransform","toLowerCase","isOpen","prevPage","to"],"sourceRoot":""}