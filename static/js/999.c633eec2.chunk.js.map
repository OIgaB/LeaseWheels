{"version":3,"file":"static/js/999.c633eec2.chunk.js","mappings":"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","sources":["components/Dashboard/Dashboard.jsx","pages/CatalogPage.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCars } from \"../../redux/selectors\";\nimport { getAllCars } from \"redux/carsOperations\";\nimport { Loader } from \"components/Loader\";\nimport scss from '../../styles/index.module.scss';\nimport SvgSprite from '../../images/sprite.svg';\n\n\nconst Dashboard = () => {\n    const [allCars, setAllCars] = useState([]);\n    const [currentPage, setCurrentPage] = useState(1);\n\n    const { items: cars, isLoading, error } = useSelector(getCars);\n\nconsole.log(cars.length)\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(getAllCars(currentPage)); // fetch for the next 8 cars\n\n    }, [currentPage, dispatch]);\n\n    useEffect(() => {\n        if (cars.length > 0) {\n            setAllCars((prevCars) => {\n                const uniqueNewCars = cars.filter((car) => {\n                    return !prevCars.some((prevCar) => prevCar.id === car.id);\n                });\n                return [...prevCars, ...uniqueNewCars];\n            });\n        }\n    }, [cars]);\n\n\n    const handleAddress = (address) => {\n        const parts = address.split(',').map(part => part.trim());\n        const [city, country] = parts.slice(-2);\n        return `${city} | ${country} |`;\n    };\n\n    const handleModel = (make, model) => {\n        return (make.length + model.length > 17) ? `${model.slice(0, 5)}...` : `${model}`; \n    };\n\n    if(currentPage !== 1) {\n        setTimeout(() => {\n          window.scrollBy({\n            top: 510,\n            behavior: 'smooth',\n        });\n        }, 150);\n    }\n\n    return (          \n        <>   \n        {isLoading && <Loader />}\n        {error && <p>Sorry, data has not loaded.</p>}\n        <div className={scss.dashbordContainer}>\n            <ul className={scss.dashbordList}>\n                {allCars.length > 0 && (\n                    allCars.map(({ id, img, make, model, year, rentalPrice, address, rentalCompany, type,  functionalities}) => (\n                        <li key={id} className={scss.listCard}>\n                            <div className={scss.pictureContainer}>\n                                <img \n                                    className={scss.picture} \n                                    src={img}\n                                    alt={make}\n                                />    \n                                <button\n                                    type=\"button\"\n                                    className={scss.iconHeartBtn}\n                                    aria-label=\"heart\"\n                                    // onClick={dispatch( (id))}\n                                    >\n                                    <svg width=\"18\" height=\"18\">\n                                        <use href={SvgSprite + '#icon-heart'} />\n                                    </svg>\n                                </button>                              \n                            </div>\n                            <div className={scss.cardHeaderPrice}>\n                                <p>{make} <span style={{color: '#3470FF'}}>{handleModel(make, model)}</span>, {year}</p>\n                                <p>{rentalPrice}</p>                                \n                            </div>\n                            <div className={scss.cardDesc}>\n                                <p>{`${handleAddress(address)} ${rentalCompany} | ${rentalPrice.slice(1) > 50 ? 'Premium |' : 'Economy |'}`}<span style={{ textTransform: 'capitalize' }}>{` ${type.toLowerCase()} |`}</span>{` ${model} | ${id} | ${functionalities[0]}`}</p>\n                            </div>\n                            <button type=\"button\" className={scss.learnMoreBtn}>Learn more</button>\n                        </li>\n                    ))\n                )}\n            </ul>\n            {(allCars.length !== 0 && currentPage !== 4) && \n                <button \n                    type=\"button\" \n                    onClick={() => setCurrentPage((prevPage) => prevPage + 1)} \n                    className={scss.loadMoreBtn}\n                >\n                    Load more\n                </button>\n            }\n            {currentPage === 4 && <p className={scss.collectionEnd}>You've reached the end of search results.</p>} \n        </div>\n        </>   \n    );\n}\n\nexport default Dashboard;\n","import { NavLink } from 'react-router-dom';\nimport { Dashboard } from 'components/Dashboard';\n\nconst CatalogPage = () => {\n    return (\n      <>\n        <Dashboard />\n        <h3>Hi there! I am a CataloguePage! сторінка, що містить каталог автівок різної комплектації, які користувач може фільтрувати за маркою, ціною за годину оренди авто та кількістю кілометрів, яку подолав автомобіль під час його експлуатації (пробіг).</h3>\n        <p>\n          <NavLink to=\"/favorites\">Link to FavoritesPage (click me)</NavLink>\n        </p>\n        <p>\n          <NavLink to=\"/\">Link to HomePage (click me)</NavLink>\n        </p>\n      </>\n    );\n  };\n  export default CatalogPage;"],"names":["useState","allCars","setAllCars","currentPage","setCurrentPage","useSelector","getCars","cars","items","isLoading","error","console","log","length","dispatch","useDispatch","useEffect","getAllCars","prevCars","uniqueNewCars","filter","car","some","prevCar","id","handleAddress","address","split","map","part","trim","slice","city","country","handleModel","make","model","setTimeout","window","scrollBy","top","behavior","Loader","className","scss","img","year","rentalPrice","rentalCompany","type","functionalities","src","alt","width","height","href","SvgSprite","style","color","textTransform","toLowerCase","onClick","prevPage","to"],"sourceRoot":""}